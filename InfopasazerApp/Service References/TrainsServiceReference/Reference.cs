//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 14.0.23107.0
// 

using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Description;
using System.Threading.Tasks;
using System.Xml;

namespace InfopasazerApp.TrainsServiceReference {
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TrainGroup", Namespace="http://schemas.datacontract.org/2004/07/InfopasazerMiner")]
    public partial class TrainGroup : object, INotifyPropertyChanged {
        
        private ObservableCollection<Train> ArrivalsField;
        
        private ObservableCollection<Train> DeparturesField;
        
        [DataMember(Name="Arrivals@", IsRequired=true)]
        public ObservableCollection<Train> Arrivals {
            get {
                return this.ArrivalsField;
            }
            set {
                if ((ReferenceEquals(this.ArrivalsField, value) != true)) {
                    this.ArrivalsField = value;
                    this.RaisePropertyChanged("Arrivals");
                }
            }
        }
        
        [DataMember(Name="Departures@", IsRequired=true)]
        public ObservableCollection<Train> Departures {
            get {
                return this.DeparturesField;
            }
            set {
                if ((ReferenceEquals(this.DeparturesField, value) != true)) {
                    this.DeparturesField = value;
                    this.RaisePropertyChanged("Departures");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="Train", Namespace="http://schemas.datacontract.org/2004/07/InfopasazerMiner")]
    public partial class Train : object, INotifyPropertyChanged {
        
        private string CompanyUrlField;
        
        private string CompanyField;
        
        private string DateField;
        
        private string DelayField;
        
        private string DestinationField;
        
        private int IdField;
        
        private string NameField;
        
        private string PlannedTimeField;
        
        private string SourceField;
        
        [DataMember(Name="CompanyUrl@", IsRequired=true)]
        public string CompanyUrl {
            get {
                return this.CompanyUrlField;
            }
            set {
                if ((ReferenceEquals(this.CompanyUrlField, value) != true)) {
                    this.CompanyUrlField = value;
                    this.RaisePropertyChanged("CompanyUrl");
                }
            }
        }
        
        [DataMember(Name="Company@", IsRequired=true)]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [DataMember(Name="Date@", IsRequired=true)]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [DataMember(Name="Delay@", IsRequired=true)]
        public string Delay {
            get {
                return this.DelayField;
            }
            set {
                if ((ReferenceEquals(this.DelayField, value) != true)) {
                    this.DelayField = value;
                    this.RaisePropertyChanged("Delay");
                }
            }
        }
        
        [DataMember(Name="Destination@", IsRequired=true)]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [DataMember(Name="Id@", IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [DataMember(Name="Name@", IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [DataMember(Name="PlannedTime@", IsRequired=true)]
        public string PlannedTime {
            get {
                return this.PlannedTimeField;
            }
            set {
                if ((ReferenceEquals(this.PlannedTimeField, value) != true)) {
                    this.PlannedTimeField = value;
                    this.RaisePropertyChanged("PlannedTime");
                }
            }
        }
        
        [DataMember(Name="Source@", IsRequired=true)]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="TrainStation", Namespace="http://schemas.datacontract.org/2004/07/InfopasazerMiner")]
    public partial class TrainStation : object, INotifyPropertyChanged {
        
        private string ArrivalDelayField;
        
        private string DepartureDelayField;
        
        private string NameField;
        
        private string PlanedArrivalField;
        
        private string PlannedDepartureField;
        
        [DataMember(Name="ArrivalDelay@", IsRequired=true)]
        public string ArrivalDelay {
            get {
                return this.ArrivalDelayField;
            }
            set {
                if ((ReferenceEquals(this.ArrivalDelayField, value) != true)) {
                    this.ArrivalDelayField = value;
                    this.RaisePropertyChanged("ArrivalDelay");
                }
            }
        }
        
        [DataMember(Name="DepartureDelay@", IsRequired=true)]
        public string DepartureDelay {
            get {
                return this.DepartureDelayField;
            }
            set {
                if ((ReferenceEquals(this.DepartureDelayField, value) != true)) {
                    this.DepartureDelayField = value;
                    this.RaisePropertyChanged("DepartureDelay");
                }
            }
        }
        
        [DataMember(Name="Name@", IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [DataMember(Name="PlanedArrival@", IsRequired=true)]
        public string PlanedArrival {
            get {
                return this.PlanedArrivalField;
            }
            set {
                if ((ReferenceEquals(this.PlanedArrivalField, value) != true)) {
                    this.PlanedArrivalField = value;
                    this.RaisePropertyChanged("PlanedArrival");
                }
            }
        }
        
        [DataMember(Name="PlannedDeparture@", IsRequired=true)]
        public string PlannedDeparture {
            get {
                return this.PlannedDepartureField;
            }
            set {
                if ((ReferenceEquals(this.PlannedDepartureField, value) != true)) {
                    this.PlannedDepartureField = value;
                    this.RaisePropertyChanged("PlannedDeparture");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName="TrainsServiceReference.ITrains")]
    public interface ITrains {
        
        [OperationContract(Action="http://tempuri.org/ITrains/Get", ReplyAction="http://tempuri.org/ITrains/GetResponse")]
        Task<TrainGroup> GetAsync(int stationId);
        
        [OperationContract(Action="http://tempuri.org/ITrains/GetTrain", ReplyAction="http://tempuri.org/ITrains/GetTrainResponse")]
        Task<ObservableCollection<TrainStation>> GetTrainAsync(int trainId);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ITrainsChannel : ITrains, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class TrainsClient : ClientBase<ITrains>, ITrains {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(ServiceEndpoint serviceEndpoint, ClientCredentials clientCredentials);
        
        public TrainsClient() : 
                base(GetDefaultBinding(), GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ITrains.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TrainsClient(EndpointConfiguration endpointConfiguration) : 
                base(GetBindingForEndpoint(endpointConfiguration), GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TrainsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GetBindingForEndpoint(endpointConfiguration), new EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TrainsClient(EndpointConfiguration endpointConfiguration, EndpointAddress remoteAddress) : 
                base(GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TrainsClient(Binding binding, EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Task<TrainGroup> GetAsync(int stationId) {
            return base.Channel.GetAsync(stationId);
        }
        
        public Task<ObservableCollection<TrainStation>> GetTrainAsync(int trainId) {
            return base.Channel.GetTrainAsync(trainId);
        }
        
        public virtual Task OpenAsync() {
            return Task.Factory.FromAsync(((ICommunicationObject)(this)).BeginOpen(null, null), new Action<IAsyncResult>(((ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual Task CloseAsync() {
            return Task.Factory.FromAsync(((ICommunicationObject)(this)).BeginClose(null, null), new Action<IAsyncResult>(((ICommunicationObject)(this)).EndClose));
        }
        
        private static Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ITrains)) {
                BasicHttpBinding result = new BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ITrains)) {
                return new EndpointAddress("http://localhost:8735/Trains.svc");
            }
            throw new InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static Binding GetDefaultBinding() {
            return GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ITrains);
        }
        
        private static EndpointAddress GetDefaultEndpointAddress() {
            return GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ITrains);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_ITrains,
        }
    }
}
